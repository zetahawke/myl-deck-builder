# x-common: &common
#   env_file:
#     - .env
#   stdin_open: true
#   tty: true
#   environment:
#     - RAILS_ENV=${RAILS_ENV}
#     - POSTGRES_HOST=${POSTGRES_HOST}
#     - POSTGRES_DB=${POSTGRES_DB}
#     - POSTGRES_USER=${POSTGRES_USER}
#     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#     - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}

# services:
#   db:
#     <<: *common
#     deploy:
#       resources:
#         limits:
#           cpus: "${DOCKER_POSTGRES_CPUS:-0}"
#           memory: "${DOCKER_POSTGRES_MEMORY:-0}"
#     restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
#     stop_grace_period: "3s"
#     image: "postgres:16.2"
#     volumes:
#       - "myl-postgres-data:/var/lib/postgresql/data"
#   app:
#     <<: *common
#     build:
#       context: .
#       dockerfile: "./docker/app/development/Dockerfile"
#     command: bash -c "./bin/dev"
#     develop:
#       watch:
#         - action: sync
#           path: .
#           target: /rails_app/web
#     volumes:
#       - .:/rails_app/web
#       - gems:/app/gems
#       - node_modules:/app/node_modules
#     ports:
#       - "3004:3004"
#     depends_on:
#       - db
# volumes:
#   myl-postgres-data: {}
#   gems: {}
#   node_modules: {}

version: '3'
services:
  db:
    env_file:
      - .env
    image: postgres:13
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - RAILS_ENV=${RAILS_ENV}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
  web:
    build: .
    env_file:
      - .env
    command: bash -c "rm -f tmp/pids/server.pid && rails server -b 0.0.0.0"
    volumes:
      - webapp:/opt/app
    ports:
      - "3000:3000"
    depends_on:
      - db
    environment:
      - RAILS_ENV=${RAILS_ENV}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
volumes:
  db_data:
  webapp: